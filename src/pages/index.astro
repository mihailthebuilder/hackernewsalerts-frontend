---
import { getCollection } from "astro:content";

import SetAlert from "../components/SetAlert";
import Contact from "../components/Contact.astro";
import Post from "../components/Post.astro";

const title = "Hacker News alerts for comments and replies";
const description =
  "Get email alerts when someone replies to your comments or posts on Hacker News.";
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const favicon = "/favicon.svg";
const metaImage = "/meta.png";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href={favicon} />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:site_name" content="Hacker News Alerts" />
    <meta property="og:image" content={new URL(metaImage, Astro.url)} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(metaImage, Astro.url)} />

    <!-- Analytics -->
    {
      import.meta.env.PROD && (
        <script
          is:inline
          defer
          src="https://um.app.taralys.com/hi"
          data-website-id="c607fc96-0115-43e9-b764-ab9f5d73911c"
        />
      )
    }
  </head>
  <body>
    <body class="bg-neutral-100">
      <main class="mx-auto max-w-prose px-5 md:px-0 md:py-3 mt-3 mb-12">
        <section class="mb-3 md:mb-6 space-y-3">
          <h1 class="text-[1.4rem] md:text-3xl font-bold leading-tight">
            Email alerts for <span class="inline-block">Hacker News</span>
            comments and replies
          </h1>
          <h2>
            Get email notifications when someone replies to one of your comments
            or posts on <span class="inline-block">Hacker News</span>.
          </h2>
        </section>
        <section class="mb-6">
          <div class="mb-6">
            <script>
              const urlParams = new URLSearchParams(window.location.search);
              const code = urlParams.get("verificationCode");
              if (code) {
                async function confirmEmail(verificationCode: string) {
                  const response = await fetch(
                    `${import.meta.env.PUBLIC_API_ENDPOINT}/verify/${verificationCode}`,
                    { method: "POST" }
                  );

                  if (response.ok) {
                    document
                      .getElementById("emailVerificationSuccess")
                      ?.classList.remove("hidden");

                    return;
                  }

                  document
                    .getElementById("emailVerificationFail")
                    ?.classList.remove("hidden");
                }

                confirmEmail(code);
              }
            </script>
            <p
              id="emailVerificationSuccess"
              class="font-bold text-green-700 hidden"
            >
              Email verified! You'll now be receiving the alerts.
            </p>
            <p id="emailVerificationFail" class="font-bold text-red-700 hidden">
              Couldn't verify your email.
            </p>
          </div>
          <SetAlert client:load />
        </section>
        <section class="mb-6">
          <p class="mb-4">
            Don't want to provide your email? <a
              class="underline"
              href="/view-comments-replies">I made an online tool</a
            > that lets you view all the comments and replies you've received over
            the past 24 hours.
          </p>
        </section>
        <Contact />
        <section id="#blog" class="mb-6">
          <h2 class="text-2xl font-bold mb-3">Blog</h2>
          <ul class="space-y-2">{posts.map((post) => <Post post={post} />)}</ul>
        </section>
      </main>
    </body>
  </body>
</html>
